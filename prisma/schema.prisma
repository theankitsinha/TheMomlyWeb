generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model api_auths {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @unique(map: "api_auths_name_unique") @db.VarChar(255)
  key        String    @unique(map: "api_auths_key_unique") @db.VarChar(255)
  is_active  Boolean   @default(false)
  expires_at DateTime? @db.Date
  type       String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model app_banners {
  id                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  title                    String?                    @db.VarChar(255)
  body                     String?                    @db.VarChar(255)
  link                     String?                    @db.VarChar(255)
  image                    String?                    @db.VarChar(255)
  lat                      Decimal?                   @db.Decimal(10, 6)
  long                     Decimal?                   @db.Decimal(10, 6)
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  app_banners_stage_master app_banners_stage_master[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model app_banners_stage_master {
  app_banner_id BigInt         @db.UnsignedBigInt
  stage_id      BigInt?        @db.UnsignedBigInt
  app_banners   app_banners    @relation(fields: [app_banner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "app_banners_stage_master_app_banner_id_foreign")
  stage_masters stage_masters? @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "app_banners_stage_master_stage_id_foreign")

  @@index([app_banner_id], map: "app_banners_stage_master_app_banner_id_foreign")
  @@index([stage_id], map: "app_banners_stage_master_stage_id_foreign")
  @@ignore
}

model appointments {
  id                 BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  service_id         BigInt?             @db.UnsignedBigInt
  consultation_id    BigInt?             @db.UnsignedBigInt
  package_id         BigInt?             @db.UnsignedBigInt
  appointment_type   String?             @db.VarChar(255)
  meeting_start_time DateTime            @db.DateTime(0)
  meeting_end_time   DateTime            @db.DateTime(0)
  link               String?             @db.VarChar(255)
  expert_summary     String?             @db.VarChar(255)
  expert_comment     String?             @db.Text
  user_summary       String?             @db.VarChar(255)
  user_comment       String?             @db.Text
  user_rating        Int?
  expert_rating      Int?
  status             appointments_status @default(scheduled)
  expert_id          BigInt?             @db.UnsignedBigInt
  user_id            BigInt?             @db.UnsignedBigInt
  user_package_id    BigInt?             @db.UnsignedBigInt
  created_at         DateTime?           @db.Timestamp(0)
  updated_at         DateTime?           @db.Timestamp(0)
  consultations      consultations?      @relation(fields: [consultation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_consultation_id_foreign")
  appointment_expert users?              @relation("appointments_expert_idTousers", fields: [expert_id], references: [id], onUpdate: NoAction, map: "appointments_expert_id_foreign")
  packages           packages?           @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_package_id_foreign")
  services           services?           @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_service_id_foreign")
  appointment_user   users?              @relation("appointments_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_user_id_foreign")
  user_packages      user_packages?      @relation(fields: [user_package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "appointments_user_package_id_foreign")

  @@index([consultation_id], map: "appointments_consultation_id_foreign")
  @@index([expert_id], map: "appointments_expert_id_foreign")
  @@index([package_id], map: "appointments_package_id_foreign")
  @@index([service_id], map: "appointments_service_id_foreign")
  @@index([user_id], map: "appointments_user_id_foreign")
  @@index([user_package_id], map: "appointments_user_package_id_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model article_stage_master {
  article_id    BigInt         @db.UnsignedBigInt
  stage_id      BigInt?        @db.UnsignedBigInt
  articles      articles       @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_stage_master_article_id_foreign")
  stage_masters stage_masters? @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_stage_master_stage_id_foreign")

  @@index([article_id], map: "article_stage_master_article_id_foreign")
  @@index([stage_id], map: "article_stage_master_stage_id_foreign")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model article_tag {
  article_id BigInt   @db.UnsignedBigInt
  tag_id     BigInt   @db.UnsignedBigInt
  articles   articles @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_id_fk_8716310")
  tags       tags     @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tag_id_fk_8716310")

  @@index([article_id], map: "article_id_fk_8716310")
  @@index([tag_id], map: "tag_id_fk_8716310")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model article_web_pages_navigation {
  article_id              BigInt                @db.UnsignedBigInt
  web_pages_navigation_id BigInt                @db.UnsignedBigInt
  articles                articles              @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article_id_fk_8716275")
  web_pages_navigations   web_pages_navigations @relation(fields: [web_pages_navigation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "web_pages_navigation_id_fk_8716275")

  @@index([article_id], map: "article_id_fk_8716275")
  @@index([web_pages_navigation_id], map: "web_pages_navigation_id_fk_8716275")
  @@ignore
}

model articles {
  id                           BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  document_id                  String?                        @db.VarChar(255)
  title                        String                         @db.VarChar(255)
  sub_title                    String?                        @db.VarChar(255)
  slug                         String                         @db.VarChar(255)
  thumbnail                    String?                        @db.VarChar(255)
  cover_image                  String?                        @db.VarChar(255)
  summary                      String?                        @db.Text
  body                         String?                        @db.Text
  trending                     Boolean?                       @default(false)
  created_at                   DateTime?                      @db.Timestamp(0)
  updated_at                   DateTime?                      @db.Timestamp(0)
  author_id                    BigInt?                        @db.UnsignedBigInt
  article_stage_master         article_stage_master[]         @ignore
  article_tag                  article_tag[]                  @ignore
  article_web_pages_navigation article_web_pages_navigation[] @ignore
  users                        users?                         @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "author_fk_8716246")

  @@index([author_id], map: "author_fk_8716246")
}

model audit_logs {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  description  String    @db.Text
  subject_id   BigInt?   @db.UnsignedBigInt
  subject_type String?   @db.VarChar(255)
  user_id      BigInt?   @db.UnsignedBigInt
  properties   String?   @db.Text
  host         String?   @db.VarChar(46)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model blocked_users {
  id                                         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at                                 DateTime? @db.Timestamp(0)
  updated_at                                 DateTime? @db.Timestamp(0)
  user_id                                    BigInt?   @db.UnsignedBigInt
  blocked_user_id                            BigInt?   @db.UnsignedBigInt
  users_blocked_users_blocked_user_idTousers users?    @relation("blocked_users_blocked_user_idTousers", fields: [blocked_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "blocked_user_fk_8688692")
  users_blocked_users_user_idTousers         users?    @relation("blocked_users_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8688691")

  @@index([blocked_user_id], map: "blocked_user_fk_8688692")
  @@index([user_id], map: "user_fk_8688691")
}

model children {
  id                                                                           BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  gender                                                                       String?                 @db.VarChar(255)
  dob                                                                          DateTime?               @db.Date
  name                                                                         String?                 @db.VarChar(255)
  created_at                                                                   DateTime?               @db.Timestamp(0)
  updated_at                                                                   DateTime?               @db.Timestamp(0)
  deleted_at                                                                   DateTime?               @db.Timestamp(0)
  user_id                                                                      BigInt?                 @db.UnsignedBigInt
  children_stage_id                                                            BigInt?                 @db.UnsignedBigInt
  recommended_stage_id                                                         BigInt?                 @db.UnsignedBigInt
  children_stage_masters_children_children_stage_idTochildren_stage_masters    children_stage_masters? @relation("children_children_stage_idTochildren_stage_masters", fields: [children_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "children_stage_fk_8687455")
  children_stage_masters_children_recommended_stage_idTochildren_stage_masters children_stage_masters? @relation("children_recommended_stage_idTochildren_stage_masters", fields: [recommended_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recommended_stage_fk_8716235")
  users                                                                        users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687340")

  @@index([children_stage_id], map: "children_stage_fk_8687455")
  @@index([recommended_stage_id], map: "recommended_stage_fk_8716235")
  @@index([user_id], map: "user_fk_8687340")
}

model children_stage_masters {
  id                                                             BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                           String?        @db.VarChar(255)
  start_days                                                     Int?
  end_days                                                       Int?
  created_at                                                     DateTime?      @db.Timestamp(0)
  updated_at                                                     DateTime?      @db.Timestamp(0)
  deleted_at                                                     DateTime?      @db.Timestamp(0)
  mother_stage_id                                                BigInt?        @db.UnsignedBigInt
  children_children_children_stage_idTochildren_stage_masters    children[]     @relation("children_children_stage_idTochildren_stage_masters")
  children_children_recommended_stage_idTochildren_stage_masters children[]     @relation("children_recommended_stage_idTochildren_stage_masters")
  stage_masters                                                  stage_masters? @relation(fields: [mother_stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mother_stage_fk_8716326")
  profiles                                                       profiles[]

  @@index([mother_stage_id], map: "mother_stage_fk_8716326")
}

model cities {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  city       String?   @db.VarChar(255)
  state      String?   @db.VarChar(255)
  country    String?   @db.VarChar(255)
  url        String?   @db.VarChar(255)
  popular    Boolean?  @default(false)
  lat        Decimal?  @db.Decimal(10, 6)
  long       Decimal?  @db.Decimal(10, 6)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model consultations {
  id           BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  name         String         @db.VarChar(255)
  summary      String?        @db.Text
  desc         String?        @db.Text
  image        String?        @db.VarChar(255)
  service_id   BigInt         @db.UnsignedBigInt
  created_at   DateTime?      @db.Timestamp(0)
  updated_at   DateTime?      @db.Timestamp(0)
  appointments appointments[]
  services     services       @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "consultations_service_id_foreign")
  packages     packages[]

  @@index([service_id], map: "consultations_service_id_foreign")
}

model coupons {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  code          String          @unique(map: "coupons_code_unique") @db.VarChar(255)
  desc          String?         @db.Text
  type          String?         @db.VarChar(255)
  user_type     String?         @db.VarChar(255)
  use_count     Int?
  discount      Decimal         @default(0.00) @db.Decimal(5, 2)
  is_percent    Boolean         @default(true)
  expiry_date   DateTime?       @db.DateTime(0)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  user_coupons  user_coupons[]
  user_packages user_packages[]
}

model expert_packages {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  expert_id  BigInt    @db.UnsignedBigInt
  package_id BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  experts    experts   @relation(fields: [expert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "expert_packages_expert_id_foreign")
  packages   packages  @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "expert_packages_package_id_foreign")

  @@index([expert_id], map: "expert_packages_expert_id_foreign")
  @@index([package_id], map: "expert_packages_package_id_foreign")
}

model experts {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  code            String?           @db.VarChar(255)
  user_id         BigInt            @db.UnsignedBigInt
  specialization  String            @db.VarChar(255)
  link            String?           @db.VarChar(255)
  experience      Int?
  desc            String?           @db.Text
  availability    Json?
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  expert_packages expert_packages[]
  users           users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "experts_user_id_foreign")

  @@index([user_id], map: "experts_user_id_foreign")
}

model feed_comments {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  comment              String?   @db.Text
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)
  feed_id              BigInt?   @db.UnsignedBigInt
  commented_by_user_id BigInt?   @db.UnsignedBigInt
  users                users?    @relation(fields: [commented_by_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "commented_by_user_fk_8688647")
  feeds                feeds?    @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_fk_8688646")

  @@index([commented_by_user_id], map: "commented_by_user_fk_8688647")
  @@index([feed_id], map: "feed_fk_8688646")
}

model feed_likes {
  id               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  feed_id          BigInt?   @db.UnsignedBigInt
  liked_by_user_id BigInt?   @db.UnsignedBigInt
  feeds            feeds?    @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_fk_8688635")
  users            users?    @relation(fields: [liked_by_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "liked_by_user_fk_8699348")

  @@index([feed_id], map: "feed_fk_8688635")
  @@index([liked_by_user_id], map: "liked_by_user_fk_8699348")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model feed_tag {
  feed_id BigInt @db.UnsignedBigInt
  tag_id  BigInt @db.UnsignedBigInt
  feeds   feeds  @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_id_fk_8687416")
  tags    tags   @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tag_id_fk_8687416")

  @@index([feed_id], map: "feed_id_fk_8687416")
  @@index([tag_id], map: "tag_id_fk_8687416")
  @@ignore
}

model feedbacks {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                  String?   @db.VarChar(255)
  email                                 String?   @db.VarChar(255)
  screen                                String?   @db.VarChar(255)
  message                               String?   @db.VarChar(255)
  screenshot                            String?   @db.VarChar(255)
  category                              String?   @db.VarChar(255)
  info_json                             Json?
  type                                  String?   @db.VarChar(255)
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
  user_id                               BigInt?   @db.UnsignedBigInt
  feed_report_id                        BigInt?   @db.UnsignedBigInt
  user_report_id                        BigInt?   @db.UnsignedBigInt
  feeds                                 feeds?    @relation(fields: [feed_report_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_report_fk_8688687")
  users_feedbacks_user_idTousers        users?    @relation("feedbacks_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8688667")
  users_feedbacks_user_report_idTousers users?    @relation("feedbacks_user_report_idTousers", fields: [user_report_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_report_fk_8688688")

  @@index([feed_report_id], map: "feed_report_fk_8688687")
  @@index([user_id], map: "user_fk_8688667")
  @@index([user_report_id], map: "user_report_fk_8688688")
}

model feeds {
  id                   BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  feed_type            String?                @db.VarChar(255)
  is_anonymous         Boolean                @default(false)
  feed_status          String?                @db.VarChar(255)
  body                 String?                @db.Text
  body_link            String?                @db.VarChar(255)
  image_json           Json?
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  user_id              BigInt?                @db.UnsignedBigInt
  feed_comments        feed_comments[]
  feed_likes           feed_likes[]
  feed_tag             feed_tag[]             @ignore
  feedbacks            feedbacks[]
  users                users?                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687404")
  poll_options         poll_options[]
  poll_user_selections poll_user_selections[]

  @@index([user_id], map: "user_fk_8687404")
}

model interakt_responses {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  template_name          String?   @db.VarChar(255)
  interakt_id            String?   @db.VarChar(255)
  message                String?   @db.VarChar(255)
  body_var               Json?
  chat_message_type      String?   @db.VarChar(255)
  channel_failure_reason String?   @db.VarChar(255)
  message_status         String?   @db.VarChar(255)
  received_at_utc        DateTime? @db.DateTime(0)
  delivered_at_utc       DateTime? @db.DateTime(0)
  seen_at_utc            DateTime? @db.DateTime(0)
  is_template_message    Boolean?  @default(true)
  channel_error_code     Int?
  media_url              String?   @db.VarChar(255)
  meta_data              Json?
  user_id                BigInt?   @db.UnsignedBigInt
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)
  users                  users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "interakt_responses_user_id_foreign")

  @@index([user_id], map: "interakt_responses_user_id_foreign")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model mother_notification_masters {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  day        Int
  title      String?   @db.Text
  body       String?   @db.LongText
  category   String?   @db.VarChar(255)
  link       String?   @db.VarChar(255)
  expert_id  BigInt?   @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  users      users?    @relation(fields: [expert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mother_notification_masters_expert_id_foreign")

  @@index([expert_id], map: "mother_notification_masters_expert_id_foreign")
}

model notifications {
  id              String    @id @db.Char(36)
  type            String    @db.VarChar(255)
  notifiable_type String    @db.VarChar(255)
  notifiable_id   BigInt    @db.UnsignedBigInt
  data            String    @db.Text
  read_at         DateTime? @db.Timestamp(0)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)

  @@index([notifiable_type, notifiable_id], map: "notifications_notifiable_type_notifiable_id_index")
}

model packages {
  id                 BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  name               String               @db.VarChar(255)
  short_description  String?              @db.Text
  description        String?              @db.Text
  type               String?              @db.Text
  price              Decimal              @db.Decimal(10, 2)
  duration           Int?
  max_consultations  Int?
  validity_period    Int?
  is_active          Boolean              @default(true)
  start_date         DateTime?            @db.Date
  end_date           DateTime?            @db.Date
  consultation_id    BigInt               @db.UnsignedBigInt
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  appointments       appointments[]
  expert_packages    expert_packages[]
  consultations      consultations        @relation(fields: [consultation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "packages_consultation_id_foreign")
  program_schedulers program_schedulers[]
  user_packages      user_packages[]

  @@index([consultation_id], map: "packages_consultation_id_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model password_resets {
  email      String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model payments {
  id                        BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  payment_type              String?               @db.VarChar(255)
  status                    Boolean
  code                      String                @db.VarChar(255)
  message                   String                @db.VarChar(255)
  merchant_txn_id           String                @db.VarChar(255)
  amount                    Decimal?              @db.Decimal(9, 3)
  txn_id                    String?               @db.VarChar(255)
  type                      String?               @db.VarChar(255)
  pg_transaction_id         String?               @db.VarChar(255)
  pg_service_transaction_id String?               @db.VarChar(255)
  bank_transaction_id       String?               @db.VarChar(255)
  bank_id                   String?               @db.VarChar(255)
  card_type                 String?               @db.VarChar(255)
  pg_authorization_code     String?               @db.VarChar(255)
  arn                       String?               @db.VarChar(255)
  utr                       String?               @db.VarChar(255)
  error_source              String?               @db.VarChar(255)
  error_reason              String?               @db.VarChar(255)
  error_description         String?               @db.VarChar(255)
  tax                       String?               @db.VarChar(255)
  fee                       String?               @db.VarChar(255)
  wallet                    String?               @db.VarChar(255)
  vpa                       String?               @db.VarChar(255)
  international             Boolean?
  card_network              String?               @db.VarChar(255)
  card_last4                String?               @db.VarChar(255)
  refund_status             String?               @db.VarChar(255)
  amount_refunded           String?               @db.VarChar(255)
  payment_id                String?               @db.VarChar(255)
  payment_order_id          String?               @db.VarChar(255)
  registration_id           BigInt?               @db.UnsignedBigInt
  workshops_and_event_id    BigInt?               @db.UnsignedBigInt
  user_id                   BigInt?               @db.UnsignedBigInt
  created_at                DateTime?             @db.Timestamp(0)
  updated_at                DateTime?             @db.Timestamp(0)
  registrations             registrations?        @relation(fields: [registration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_registration_id_foreign")
  users                     users?                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_user_id_foreign")
  workshops_and_events      workshops_and_events? @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_workshops_and_event_id_foreign")
  user_packages             user_packages[]

  @@index([registration_id], map: "payments_registration_id_foreign")
  @@index([user_id], map: "payments_user_id_foreign")
  @@index([workshops_and_event_id], map: "payments_workshops_and_event_id_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model permission_role {
  role_id       BigInt      @db.UnsignedBigInt
  permission_id BigInt      @db.UnsignedBigInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "permission_id_fk_8686752")
  roles         roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_id_fk_8686752")

  @@index([permission_id], map: "permission_id_fk_8686752")
  @@index([role_id], map: "role_id_fk_8686752")
  @@ignore
}

model permissions {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  title           String?           @db.VarChar(255)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[] @ignore
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model podcasts {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  is_active             Boolean                 @default(false)
  thumbnail             String?                 @db.VarChar(255)
  title                 String?                 @db.VarChar(255)
  desc                  String?                 @db.Text
  link                  String?                 @db.VarChar(255)
  type                  String?                 @db.VarChar(255)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  podcasts_stage_master podcasts_stage_master[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model podcasts_stage_master {
  podcast_id    BigInt         @db.UnsignedBigInt
  stage_id      BigInt?        @db.UnsignedBigInt
  podcasts      podcasts       @relation(fields: [podcast_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "podcasts_stage_master_podcast_id_foreign")
  stage_masters stage_masters? @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "podcasts_stage_master_stage_id_foreign")

  @@index([podcast_id], map: "podcasts_stage_master_podcast_id_foreign")
  @@index([stage_id], map: "podcasts_stage_master_stage_id_foreign")
  @@ignore
}

model poll_options {
  id                   BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  option               String                 @db.VarChar(255)
  total_selection      Int?
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  feed_id              BigInt?                @db.UnsignedBigInt
  feeds                feeds?                 @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_fk_8699352")
  poll_user_selections poll_user_selections[]

  @@index([feed_id], map: "feed_fk_8699352")
}

model poll_user_selections {
  id                  BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  created_at          DateTime?     @db.Timestamp(0)
  updated_at          DateTime?     @db.Timestamp(0)
  poll_option_id      BigInt?       @db.UnsignedBigInt
  feed_id             BigInt?       @db.UnsignedBigInt
  selected_by_user_id BigInt?       @db.UnsignedBigInt
  feeds               feeds?        @relation(fields: [feed_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "feed_fk_8699350")
  poll_options        poll_options? @relation(fields: [poll_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "poll_option_fk_8688660")
  users               users?        @relation(fields: [selected_by_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "selected_by_user_fk_8699351")

  @@index([feed_id], map: "feed_fk_8699350")
  @@index([poll_option_id], map: "poll_option_fk_8688660")
  @@index([selected_by_user_id], map: "selected_by_user_fk_8699351")
}

model profiles {
  id                     BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  bio                    String?                 @db.Text
  bio_link               String?                 @db.VarChar(255)
  pincode                String?                 @db.VarChar(255)
  gender                 String                  @db.VarChar(255)
  avatar                 String                  @db.VarChar(255)
  avatar_thumbnail       String?                 @db.VarChar(255)
  lat                    Decimal?                @db.Decimal(10, 6)
  long                   Decimal?                @db.Decimal(10, 6)
  state_of_mind          String?                 @db.VarChar(255)
  reason_to_join         String?                 @db.VarChar(255)
  describes_me           String?                 @db.VarChar(255)
  address                String?                 @db.VarChar(255)
  sub_district           String?                 @db.VarChar(255)
  district               String?                 @db.VarChar(255)
  city                   String?                 @db.VarChar(255)
  state                  String?                 @db.VarChar(255)
  country                String?                 @db.VarChar(255)
  country_code           String?                 @db.VarChar(255)
  dob                    DateTime?               @db.Date
  languages              Json?
  education              String?                 @db.VarChar(255)
  work                   String?                 @db.VarChar(255)
  hometown               String?                 @db.VarChar(255)
  verification_image     String?                 @db.VarChar(255)
  hobbies                String?                 @db.VarChar(255)
  created_at             DateTime?               @db.Timestamp(0)
  updated_at             DateTime?               @db.Timestamp(0)
  deleted_at             DateTime?               @db.Timestamp(0)
  user_id                BigInt?                 @db.UnsignedBigInt
  current_stage_id       BigInt?                 @db.UnsignedBigInt
  children_stage_id      BigInt?                 @db.UnsignedBigInt
  children_stage_masters children_stage_masters? @relation(fields: [children_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "children_stage_fk_8716316")
  stage_masters          stage_masters?          @relation(fields: [current_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "current_stage_fk_8716315")
  users                  users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687279")

  @@index([children_stage_id], map: "children_stage_fk_8716316")
  @@index([current_stage_id], map: "current_stage_fk_8716315")
  @@index([user_id], map: "user_fk_8687279")
}

model program_schedulers {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  start_time DateTime? @db.DateTime(0)
  end_time   DateTime? @db.DateTime(0)
  link       String?   @db.VarChar(255)
  package_id BigInt?   @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  packages   packages? @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "program_schedulers_package_id_foreign")

  @@index([package_id], map: "program_schedulers_package_id_foreign")
}

model push_notification_responses {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  multicast_id  String?   @db.VarChar(255)
  success       Int?
  failure       Int?
  canonical_ids Int?
  tokens        Json?
  notification  Json?
  results       Json?
  user_id       BigInt?   @db.UnsignedBigInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "push_notification_responses_user_id_foreign")

  @@index([user_id], map: "push_notification_responses_user_id_foreign")
}

model registrations {
  id                     BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  ticket_number          String?                 @unique(map: "registrations_ticket_number_unique") @db.VarChar(255)
  ticket_url             String?                 @db.VarChar(255)
  type                   String?                 @db.VarChar(255)
  amount                 Decimal?                @db.Decimal(9, 3)
  verified               Boolean                 @default(false)
  workshops_and_event_id BigInt                  @db.UnsignedBigInt
  user_id                BigInt?                 @db.UnsignedBigInt
  created_at             DateTime?               @db.Timestamp(0)
  updated_at             DateTime?               @db.Timestamp(0)
  payments               payments[]
  users                  users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "registrations_user_id_foreign")
  workshops_and_events   workshops_and_events    @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "registrations_workshops_and_event_id_foreign")
  ship_rocket_responses  ship_rocket_responses[]

  @@index([user_id], map: "registrations_user_id_foreign")
  @@index([workshops_and_event_id], map: "registrations_workshops_and_event_id_foreign")
}

model resource_categories {
  id               BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  name             String?     @db.VarChar(255)
  created_at       DateTime?   @db.Timestamp(0)
  updated_at       DateTime?   @db.Timestamp(0)
  deleted_at       DateTime?   @db.Timestamp(0)
  added_by_user_id BigInt?     @db.UnsignedBigInt
  users            users?      @relation(fields: [added_by_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "added_by_user_fk_8688761")
  resources        resources[]

  @@index([added_by_user_id], map: "added_by_user_fk_8688761")
}

model resources {
  id                   BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  name                 String?              @db.VarChar(255)
  lat                  Decimal?             @db.Decimal(10, 6)
  long                 Decimal?             @db.Decimal(10, 6)
  state                String?              @db.VarChar(255)
  city                 String?              @db.VarChar(255)
  email                String?              @db.VarChar(255)
  phone                String?              @db.VarChar(255)
  rating               String?              @db.VarChar(255)
  maps_link            String?              @db.VarChar(255)
  image                String?              @db.VarChar(255)
  user_total_ratings   String?              @db.VarChar(255)
  created_at           DateTime?            @db.Timestamp(0)
  updated_at           DateTime?            @db.Timestamp(0)
  deleted_at           DateTime?            @db.Timestamp(0)
  user_id              BigInt?              @db.UnsignedBigInt
  resource_category_id BigInt?              @db.UnsignedBigInt
  resource_categories  resource_categories? @relation(fields: [resource_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "resource_category_fk_8694895")
  users                users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8688754")

  @@index([resource_category_id], map: "resource_category_fk_8694895")
  @@index([user_id], map: "user_fk_8688754")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model role_user {
  user_id BigInt @db.UnsignedBigInt
  role_id BigInt @db.UnsignedBigInt
  roles   roles  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_id_fk_8686761")
  users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_id_fk_8686761")

  @@index([role_id], map: "role_id_fk_8686761")
  @@index([user_id], map: "user_id_fk_8686761")
  @@ignore
}

model roles {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  title           String?           @db.VarChar(255)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[] @ignore
  role_user       role_user[]       @ignore
}

model schedule_histories {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  schedule_id Int       @db.UnsignedInt
  command     String    @db.VarChar(255)
  params      String?   @db.Text
  output      String    @db.Text
  options     String?   @db.Text
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  schedules   schedules @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_histories_schedule_id_foreign")

  @@index([schedule_id], map: "schedule_histories_schedule_id_foreign")
}

model schedules {
  id                       Int                  @id @default(autoincrement()) @db.UnsignedInt
  command                  String               @db.VarChar(255)
  command_custom           String?              @db.VarChar(255)
  params                   String?              @db.Text
  expression               String               @db.VarChar(255)
  environments             String?              @db.VarChar(255)
  options                  String?              @db.Text
  log_filename             String?              @db.VarChar(255)
  even_in_maintenance_mode Boolean              @default(false)
  without_overlapping      Boolean              @default(false)
  on_one_server            Boolean              @default(false)
  webhook_before           String?              @db.VarChar(255)
  webhook_after            String?              @db.VarChar(255)
  email_output             String?              @db.VarChar(255)
  sendmail_error           Boolean              @default(false)
  log_success              Boolean              @default(true)
  log_error                Boolean              @default(true)
  status                   Boolean              @default(true)
  run_in_background        Boolean              @default(false)
  groups                   String?              @db.VarChar(255)
  created_at               DateTime?            @db.Timestamp(0)
  updated_at               DateTime?            @db.Timestamp(0)
  deleted_at               DateTime?            @db.Timestamp(0)
  sendmail_success         Boolean              @default(false)
  schedule_histories       schedule_histories[]
}

model services {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name          String          @db.VarChar(255)
  summary       String?         @db.Text
  desc          String?         @db.Text
  image         String?         @db.VarChar(255)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  appointments  appointments[]
  consultations consultations[]
}

model ship_rocket_responses {
  id                       BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  order_id                 String               @db.VarChar(50)
  shipment_id              String?              @db.VarChar(50)
  status                   String?              @db.VarChar(255)
  status_code              Int?
  onboarding_completed_now Int?
  courier_company_id       String?              @db.VarChar(255)
  courier_name             String?              @db.VarChar(255)
  awb_code                 String?              @db.VarChar(255)
  order_date               DateTime?            @db.DateTime(0)
  pickup_location          String?              @db.VarChar(255)
  channel_id               String?              @db.VarChar(255)
  comment                  String?              @db.VarChar(255)
  reseller_name            String?              @db.VarChar(255)
  company_name             String?              @db.VarChar(255)
  billing_customer_name    String               @db.VarChar(255)
  billing_last_name        String?              @db.VarChar(255)
  billing_address          String?              @db.VarChar(255)
  billing_address_2        String?              @db.VarChar(255)
  billing_city             String               @db.VarChar(30)
  billing_pincode          String               @db.VarChar(255)
  billing_state            String               @db.VarChar(255)
  billing_country          String               @db.VarChar(255)
  billing_email            String               @db.VarChar(255)
  billing_phone            String               @db.VarChar(255)
  billing_alternate_phone  String?              @db.VarChar(255)
  shipping_is_billing      Boolean
  shipping_customer_name   String?              @db.VarChar(255)
  shipping_last_name       String?              @db.VarChar(255)
  shipping_address         String?              @db.VarChar(255)
  shipping_address_2       String?              @db.VarChar(255)
  billing_isd_code         String?              @db.VarChar(255)
  shipping_city            String?              @db.VarChar(255)
  shipping_pincode         String?              @db.VarChar(255)
  shipping_country         String?              @db.VarChar(255)
  shipping_state           String?              @db.VarChar(255)
  shipping_email           String?              @db.VarChar(255)
  shipping_phone           String?              @db.VarChar(255)
  longitude                Float?
  latitude                 Float?
  order_items              Json
  payment_method           String?              @db.VarChar(255)
  shipping_charges         Decimal?             @db.Decimal(9, 3)
  giftwrap_charges         Decimal?             @db.Decimal(9, 3)
  transaction_charges      Decimal?             @db.Decimal(9, 3)
  total_discount           Decimal?             @db.Decimal(9, 3)
  sub_total                Decimal?             @db.Decimal(9, 3)
  length                   String?              @db.VarChar(255)
  breadth                  String?              @db.VarChar(255)
  height                   String?              @db.VarChar(255)
  weight                   String?              @db.VarChar(255)
  ewaybill_no              String?              @db.VarChar(255)
  customer_gstin           String?              @db.VarChar(255)
  invoice_number           String?              @db.VarChar(255)
  order_type               String?              @db.VarChar(255)
  checkout_shipping_method String?              @db.VarChar(255)
  what3words_address       String?              @db.VarChar(255)
  user_id                  BigInt?              @db.UnsignedBigInt
  registration_id          BigInt               @db.UnsignedBigInt
  workshops_and_event_id   BigInt               @db.UnsignedBigInt
  created_at               DateTime?            @db.Timestamp(0)
  updated_at               DateTime?            @db.Timestamp(0)
  registrations            registrations        @relation(fields: [registration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ship_rocket_responses_registration_id_foreign")
  users                    users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ship_rocket_responses_user_id_foreign")
  workshops_and_events     workshops_and_events @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "ship_rocket_responses_workshops_and_event_id_foreign")

  @@index([registration_id], map: "ship_rocket_responses_registration_id_foreign")
  @@index([user_id], map: "ship_rocket_responses_user_id_foreign")
  @@index([workshops_and_event_id], map: "ship_rocket_responses_workshops_and_event_id_foreign")
}

model stage_masters {
  id                                                          BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                        String?                             @db.VarChar(255)
  created_at                                                  DateTime?                           @db.Timestamp(0)
  updated_at                                                  DateTime?                           @db.Timestamp(0)
  deleted_at                                                  DateTime?                           @db.Timestamp(0)
  app_banners_stage_master                                    app_banners_stage_master[]          @ignore
  article_stage_master                                        article_stage_master[]              @ignore
  children_stage_masters                                      children_stage_masters[]
  podcasts_stage_master                                       podcasts_stage_master[]             @ignore
  profiles                                                    profiles[]
  user_stages_user_stages_recommended_stage_idTostage_masters user_stages[]                       @relation("user_stages_recommended_stage_idTostage_masters")
  user_stages_user_stages_stage_idTostage_masters             user_stages[]                       @relation("user_stages_stage_idTostage_masters")
  workshops_and_events_stage_master                           workshops_and_events_stage_master[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tag_user {
  user_id BigInt @db.UnsignedBigInt
  tag_id  BigInt @db.UnsignedBigInt
  tags    tags   @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tag_id_fk_8694966")
  users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_id_fk_8694966")

  @@index([tag_id], map: "tag_id_fk_8694966")
  @@index([user_id], map: "user_id_fk_8694966")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tag_web_pages_navigation {
  web_pages_navigation_id BigInt                @db.UnsignedBigInt
  tag_id                  BigInt                @db.UnsignedBigInt
  tags                    tags                  @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tag_id_fk_8716314")
  web_pages_navigations   web_pages_navigations @relation(fields: [web_pages_navigation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "web_pages_navigation_id_fk_8716314")

  @@index([tag_id], map: "tag_id_fk_8716314")
  @@index([web_pages_navigation_id], map: "web_pages_navigation_id_fk_8716314")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tag_workshops_and_event {
  workshops_and_event_id BigInt               @db.UnsignedBigInt
  tag_id                 BigInt               @db.UnsignedBigInt
  tags                   tags                 @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "tag_id_fk_8716276")
  workshops_and_events   workshops_and_events @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "workshops_and_event_id_fk_8716276")

  @@index([tag_id], map: "tag_id_fk_8716276")
  @@index([workshops_and_event_id], map: "workshops_and_event_id_fk_8716276")
  @@ignore
}

model tags {
  id                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  tag_type                 String?                    @db.VarChar(255)
  name                     String?                    @db.VarChar(255)
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  article_tag              article_tag[]              @ignore
  feed_tag                 feed_tag[]                 @ignore
  tag_user                 tag_user[]                 @ignore
  tag_web_pages_navigation tag_web_pages_navigation[] @ignore
  tag_workshops_and_event  tag_workshops_and_event[]  @ignore
}

model telescope_entries {
  sequence                BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid                    String                   @unique(map: "telescope_entries_uuid_unique") @db.Char(36)
  batch_id                String                   @db.Char(36)
  family_hash             String?                  @db.VarChar(255)
  should_display_on_index Boolean                  @default(true)
  type                    String                   @db.VarChar(20)
  content                 String                   @db.LongText
  created_at              DateTime?                @db.DateTime(0)
  telescope_entries_tags  telescope_entries_tags[] @ignore

  @@index([batch_id], map: "telescope_entries_batch_id_index")
  @@index([created_at], map: "telescope_entries_created_at_index")
  @@index([family_hash], map: "telescope_entries_family_hash_index")
  @@index([type, should_display_on_index], map: "telescope_entries_type_should_display_on_index_index")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model telescope_entries_tags {
  entry_uuid        String            @db.Char(36)
  tag               String            @db.VarChar(255)
  telescope_entries telescope_entries @relation(fields: [entry_uuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "telescope_entries_tags_entry_uuid_foreign")

  @@index([entry_uuid, tag], map: "telescope_entries_tags_entry_uuid_tag_index")
  @@index([tag], map: "telescope_entries_tags_tag_index")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model telescope_monitoring {
  tag String @db.VarChar(255)

  @@ignore
}

model user_connections {
  id                                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  status                                  Int?      @default(0)
  user_contact_share                      Boolean?  @default(false)
  friend_contact_share                    Boolean?  @default(false)
  created_at                              DateTime? @db.Timestamp(0)
  updated_at                              DateTime? @db.Timestamp(0)
  user_id                                 BigInt?   @db.UnsignedBigInt
  friend_id                               BigInt?   @db.UnsignedBigInt
  users_user_connections_friend_idTousers users?    @relation("user_connections_friend_idTousers", fields: [friend_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "friend_fk_8687353")
  users_user_connections_user_idTousers   users?    @relation("user_connections_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687351")

  @@index([friend_id], map: "friend_fk_8687353")
  @@index([user_id], map: "user_fk_8687351")
}

model user_coupons {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  coupon_id  BigInt    @db.UnsignedBigInt
  use_count  Int?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  coupons    coupons   @relation(fields: [coupon_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_coupons_coupon_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_coupons_user_id_foreign")

  @@index([coupon_id], map: "user_coupons_coupon_id_foreign")
  @@index([user_id], map: "user_coupons_user_id_foreign")
}

model user_logins {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  notification_token  String?   @db.VarChar(255)
  device_id           String?   @db.VarChar(255)
  device_os           String?   @db.VarChar(255)
  device_type         String?   @db.VarChar(255)
  device_model        String?   @db.VarChar(255)
  device_manufacturer String?   @db.VarChar(255)
  login_method        String?   @db.VarChar(255)
  ip                  String?   @db.VarChar(255)
  info                Json?
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)
  deleted_at          DateTime? @db.Timestamp(0)
  user_id             BigInt?   @db.UnsignedBigInt
  users               users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687388")

  @@index([user_id], map: "user_fk_8687388")
}

model user_packages {
  id                                  BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  ticket_number                       String?        @db.VarChar(255)
  user_id                             BigInt         @db.UnsignedBigInt
  package_id                          BigInt         @db.UnsignedBigInt
  start_date                          DateTime?      @db.DateTime(0)
  end_date                            DateTime?      @db.DateTime(0)
  refer_id                            BigInt?        @db.UnsignedBigInt
  coupon_id                           BigInt?        @db.UnsignedBigInt
  payment_id                          BigInt?        @db.UnsignedBigInt
  discount_amount                     Decimal?       @default(0.00) @db.Decimal(10, 2)
  total_amount                        Decimal?       @default(0.00) @db.Decimal(10, 2)
  verified                            Boolean        @default(false)
  created_at                          DateTime?      @db.Timestamp(0)
  updated_at                          DateTime?      @db.Timestamp(0)
  appointments                        appointments[]
  coupons                             coupons?       @relation(fields: [coupon_id], references: [id], onUpdate: NoAction, map: "user_packages_coupon_id_foreign")
  packages                            packages       @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_packages_package_id_foreign")
  payments                            payments?      @relation(fields: [payment_id], references: [id], onUpdate: NoAction, map: "user_packages_payment_id_foreign")
  users_user_packages_refer_idTousers users?         @relation("user_packages_refer_idTousers", fields: [refer_id], references: [id], onUpdate: NoAction, map: "user_packages_refer_id_foreign")
  users_user_packages_user_idTousers  users          @relation("user_packages_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_packages_user_id_foreign")

  @@index([coupon_id], map: "user_packages_coupon_id_foreign")
  @@index([package_id], map: "user_packages_package_id_foreign")
  @@index([payment_id], map: "user_packages_payment_id_foreign")
  @@index([refer_id], map: "user_packages_refer_id_foreign")
  @@index([user_id], map: "user_packages_user_id_foreign")
}

model user_stages {
  id                                                            BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  stage_json                                                    Json?
  date                                                          DateTime?      @db.Date
  is_visible                                                    Boolean?       @default(false)
  created_at                                                    DateTime?      @db.Timestamp(0)
  updated_at                                                    DateTime?      @db.Timestamp(0)
  deleted_at                                                    DateTime?      @db.Timestamp(0)
  stage_id                                                      BigInt?        @db.UnsignedBigInt
  recommended_stage_id                                          BigInt?        @db.UnsignedBigInt
  user_id                                                       BigInt?        @db.UnsignedBigInt
  stage_masters_user_stages_recommended_stage_idTostage_masters stage_masters? @relation("user_stages_recommended_stage_idTostage_masters", fields: [recommended_stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recommended_stage_fk_8716234")
  stage_masters_user_stages_stage_idTostage_masters             stage_masters? @relation("user_stages_stage_idTostage_masters", fields: [stage_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "stage_fk_8687441")
  users                                                         users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_fk_8687442")

  @@index([recommended_stage_id], map: "recommended_stage_fk_8716234")
  @@index([stage_id], map: "stage_fk_8687441")
  @@index([user_id], map: "user_fk_8687442")
}

model users {
  id                                                 BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  firebase_uid                                       String?                       @db.VarChar(255)
  firebase_provider                                  Json?
  firebase_provider_type                             String?                       @db.VarChar(255)
  name                                               String?                       @db.VarChar(255)
  username_visibility                                Boolean?                      @default(false)
  username                                           String?                       @unique(map: "users_username_unique") @db.VarChar(255)
  phone_extension                                    String?                       @default("91") @db.VarChar(255)
  phone_number                                       String?                       @unique(map: "users_phone_number_unique") @db.VarChar(255)
  is_approved                                        Boolean?                      @default(false)
  email                                              String?                       @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at                                  DateTime?                     @db.DateTime(0)
  password                                           String?                       @db.VarChar(255)
  remember_token                                     String?                       @db.VarChar(255)
  locale                                             String?                       @db.VarChar(255)
  created_at                                         DateTime?                     @db.Timestamp(0)
  updated_at                                         DateTime?                     @db.Timestamp(0)
  deleted_at                                         DateTime?                     @db.Timestamp(0)
  appointments_appointments_expert_idTousers         appointments[]                @relation("appointments_expert_idTousers")
  appointments_appointments_user_idTousers           appointments[]                @relation("appointments_user_idTousers")
  articles                                           articles[]
  blocked_users_blocked_users_blocked_user_idTousers blocked_users[]               @relation("blocked_users_blocked_user_idTousers")
  blocked_users_blocked_users_user_idTousers         blocked_users[]               @relation("blocked_users_user_idTousers")
  children                                           children[]
  experts                                            experts[]
  feed_comments                                      feed_comments[]
  feed_likes                                         feed_likes[]
  feedbacks_feedbacks_user_idTousers                 feedbacks[]                   @relation("feedbacks_user_idTousers")
  feedbacks_feedbacks_user_report_idTousers          feedbacks[]                   @relation("feedbacks_user_report_idTousers")
  feeds                                              feeds[]
  interakt_responses                                 interakt_responses[]
  mother_notification_masters                        mother_notification_masters[]
  payments                                           payments[]
  poll_user_selections                               poll_user_selections[]
  profiles                                           profiles[]
  push_notification_responses                        push_notification_responses[]
  registrations                                      registrations[]
  resource_categories                                resource_categories[]
  resources                                          resources[]
  role_user                                          role_user[]                   @ignore
  ship_rocket_responses                              ship_rocket_responses[]
  tag_user                                           tag_user[]                    @ignore
  user_connections_user_connections_friend_idTousers user_connections[]            @relation("user_connections_friend_idTousers")
  user_connections_user_connections_user_idTousers   user_connections[]            @relation("user_connections_user_idTousers")
  user_coupons                                       user_coupons[]
  user_logins                                        user_logins[]
  user_packages_user_packages_refer_idTousers        user_packages[]               @relation("user_packages_refer_idTousers")
  user_packages_user_packages_user_idTousers         user_packages[]               @relation("user_packages_user_idTousers")
  user_stages                                        user_stages[]
  workshops_and_events                               workshops_and_events[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model web_pages_navigation_workshops_and_event {
  workshops_and_event_id  BigInt                @db.UnsignedBigInt
  web_pages_navigation_id BigInt                @db.UnsignedBigInt
  web_pages_navigations   web_pages_navigations @relation(fields: [web_pages_navigation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "web_pages_navigation_id_fk_8716277")
  workshops_and_events    workshops_and_events  @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "workshops_and_event_id_fk_8716277")

  @@index([web_pages_navigation_id], map: "web_pages_navigation_id_fk_8716277")
  @@index([workshops_and_event_id], map: "workshops_and_event_id_fk_8716277")
  @@ignore
}

model web_pages_navigations {
  id                                       BigInt                                     @id @default(autoincrement()) @db.UnsignedBigInt
  page                                     String                                     @db.VarChar(255)
  is_active                                Boolean                                    @default(false)
  thumbnail                                String?                                    @db.VarChar(255)
  created_at                               DateTime?                                  @db.Timestamp(0)
  updated_at                               DateTime?                                  @db.Timestamp(0)
  article_web_pages_navigation             article_web_pages_navigation[]             @ignore
  tag_web_pages_navigation                 tag_web_pages_navigation[]                 @ignore
  web_pages_navigation_workshops_and_event web_pages_navigation_workshops_and_event[] @ignore
}

model workshops_and_events {
  id                                       BigInt                                     @id @default(autoincrement()) @db.UnsignedBigInt
  url                                      String                                     @db.VarChar(255)
  event_type                               String                                     @db.VarChar(255)
  thumbnail                                String                                     @db.VarChar(255)
  cover_image                              String?                                    @db.VarChar(255)
  body                                     String?                                    @db.Text
  age_group                                String?                                    @db.VarChar(255)
  location                                 String                                     @db.VarChar(255)
  event_url                                String                                     @db.VarChar(255)
  price                                    Decimal                                    @db.Decimal(15, 2)
  title                                    String                                     @db.VarChar(255)
  sub_title                                String?                                    @db.VarChar(255)
  speciality                               String                                     @db.VarChar(255)
  start_date                               DateTime                                   @db.DateTime(0)
  end_date                                 DateTime                                   @db.DateTime(0)
  created_at                               DateTime?                                  @db.Timestamp(0)
  updated_at                               DateTime?                                  @db.Timestamp(0)
  expert_id                                BigInt?                                    @db.UnsignedBigInt
  payments                                 payments[]
  registrations                            registrations[]
  ship_rocket_responses                    ship_rocket_responses[]
  tag_workshops_and_event                  tag_workshops_and_event[]                  @ignore
  web_pages_navigation_workshops_and_event web_pages_navigation_workshops_and_event[] @ignore
  users                                    users?                                     @relation(fields: [expert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "expert_fk_8716262")
  workshops_and_events_stage_master        workshops_and_events_stage_master[]        @ignore

  @@index([expert_id], map: "expert_fk_8716262")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model workshops_and_events_stage_master {
  workshops_and_event_id BigInt               @db.UnsignedBigInt
  stage_id               BigInt?              @db.UnsignedBigInt
  stage_masters          stage_masters?       @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "workshops_and_events_stage_master_stage_id_foreign")
  workshops_and_events   workshops_and_events @relation(fields: [workshops_and_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "workshops_and_events_stage_master_workshops_and_event_id_foreign")

  @@index([stage_id], map: "workshops_and_events_stage_master_stage_id_foreign")
  @@index([workshops_and_event_id], map: "workshops_and_events_stage_master_workshops_and_event_id_foreign")
  @@ignore
}

enum appointments_status {
  pending
  ready
  scheduled
  cancelled
  rescheduled
  completed
}
